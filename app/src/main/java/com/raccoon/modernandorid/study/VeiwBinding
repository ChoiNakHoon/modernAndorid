
뷰 바인딩의 필요성
    - 뷰의 요소를 불러내기 위해서 findviewbyid를 사용해야한다
    - 하지만 kotlin-android-extensions를 사용하면 생략가능
    - 문제는 서로 다른 xml인데 동일한 아이디가 엄청 생겼을때 오히려 햇갈림
    - 그래서 이거를 지원 준단하고 뷰 바인딩 쓰라고 하는거

What
    - 뷰 바인딩을 활성화하면 각 xml 파일에 대해 ViewBinding클래스를 상속 받는 개별 뷰 바인딩 클래스가 자동으로 생성
    - onCreate()안에서 뷰 바인딩 클래스의 인스턴스를 생성
    - 인스턴스가 뷰의 Id를 프로퍼티로 제공

뷰 바인딩 장점
    - NullSafe : 다른 레이아웃의 같은 ID를 가진 뷰를 구분 할 수 있지만 안되면 @Nullable해서 사용 못하게 만듬
    - TypeSage : 잘못된 타입을 지정 할 일이 없다.
